services:
  self:
    image: git.nokiy.net/reonokiy/self-nokiy-net:latest
    restart: unless-stopped
    environment:
      NOKIY_POST__BACKEND__BASE_URL: https://git.nokiy.net/api/v1
      NOKIY_POST__BACKEND__API_KEY: ${FORGEJO_API_KEY}
      NOKIY_POST__BACKEND__OWNER: reonokiy
      NOKIY_POST__BACKEND__REPO: note
      NOKIY_WEBHOOK_TOKEN: ${WEBHOOK_TOKEN:-""}
      NOKIY_DB__CONNECT_STRING: postgresql://${DB_USER:-nokiy}:${DB_PASSWORD:-nokiy}@postgres:5432/${DB_NAME:-nokiy}
    networks:
      - proxy
      - internal-nokiy-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.api-nokiy-net.loadbalancer.server.port=8000"
      - "traefik.http.routers.self-nokiy-net.rule=Host(`nokiy.net`) && PathPrefix(`/api`)"
      - "traefik.http.routers.self-nokiy-net.entrypoints=websecure,internal"
      - "traefik.http.routers.self-nokiy-net.service=api-nokiy-net"
      - "traefik.http.routers.self-nokiy-net.tls=true"
      - "traefik.http.routers.self-nokiy-net.tls.certresolver=cloudflare"
      # Internal API access
      - "traefik.http.routers.internal-self-nokiy-net.rule=Host(`self-nokiy-net.yuzu.i.nokiy.net`)"
      - "traefik.http.routers.internal-self-nokiy-net.entrypoints=internal"
      - "traefik.http.routers.internal-self-nokiy-net.service=api-nokiy-net"
      - "traefik.http.routers.internal-self-nokiy-net.tls=true"
      - "traefik.http.routers.internal-self-nokiy-net.tls.certresolver=cloudflare"

  web:
    image: git.nokiy.net/reonokiy/nokiy-net:latest
    restart: unless-stopped
    environment:
      API_ENDPOINT: http://self:8000
    networks:
      - proxy
      - internal-nokiy-net
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.frontend-nokiy-net.loadbalancer.server.port=4321"
      - "traefik.http.routers.nokiy-net.rule=Host(`nokiy.net`)"
      - "traefik.http.routers.nokiy-net.entrypoints=websecure,internal"
      - "traefik.http.routers.nokiy-net.service=frontend-nokiy-net"
      - "traefik.http.routers.nokiy-net.tls=true"
      - "traefik.http.routers.nokiy-net.tls.certresolver=cloudflare"
      # Internal API access
      - "traefik.http.routers.internal-nokiy-net.rule=Host(`nokiy-net.yuzu.i.nokiy.net`)"
      - "traefik.http.routers.internal-nokiy-net.entrypoints=internal"
      - "traefik.http.routers.internal-nokiy-net.service=frontend-nokiy-net"
      - "traefik.http.routers.internal-nokiy-net.tls=true"
      - "traefik.http.routers.internal-nokiy-net.tls.certresolver=cloudflare"

  postgres:
    image: postgres:17-trixie
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-nokiy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-nokiy}
      POSTGRES_DB: ${DB_NAME:-nokiy}
    volumes:
      - ${DATA_DIR:-/data}/self-nokiy-net/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-nokiy}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    networks:
      - internal-nokiy-net

networks:
  proxy:
    external: true
    name: proxy
  internal-nokiy-net:
