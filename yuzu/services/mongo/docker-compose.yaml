services:
  mongo:
    image: mongo:8.0
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - ${DATA_DIR}/db:/data/db
    networks:
      - internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.routers.mongodb-tls.rule=HostSNI(`mongo.i.nokiy.net`)"
      - "traefik.tcp.routers.mongodb-tls.entrypoints=mongo"
      - "traefik.tcp.routers.mongodb-tls.service=mongodb-svc"
      - "traefik.tcp.routers.mongodb-tls.tls.certresolver=cloudflare"
      - "traefik.tcp.services.mongodb-svc.loadbalancer.server.port=27017"

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    restart: always
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - internal
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.mongo-express.loadbalancer.server.port=8081"
      - "traefik.http.routers.mongo-express.rule=Host(`mongo.i.nokiy.net`)"
      - "traefik.http.routers.mongo-express.entrypoints=internal"
      - "traefik.http.routers.mongo-express.tls.certresolver=cloudflare"
      - "traefik.http.routers.mongo-express.middlewares=authentik-auth@docker"

networks:
  proxy:
    external: true
    name: proxy
  internal:
